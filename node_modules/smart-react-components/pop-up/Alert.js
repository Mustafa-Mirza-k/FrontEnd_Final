'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

require('../index-6d498b59.js');
require('../ColorHelper-0420aa74.js');
var DOMHelper = require('../DOMHelper-c0bd5a29.js');
var React = require('react');
var React__default = _interopDefault(React);
require('styled-components');
require('../index-1781dba3.js');
require('../Div-d2bf7bfb.js');
require('../A-e2a4a504.js');
require('react-dom');
require('../WaveEffect-9d69f3bc.js');
require('../Element-b7cd5b2f.js');
require('../Transition-48c5648c.js');
require('../CSSTransition-157762f7.js');
require('../Loading-68c8479c.js');
var Button = require('../Button-cdfef8e7.js');
require('../Overlay-c9458132.js');
require('../Element-a54cdab9.js');
var Header = require('../Header-385df890.js');
var Title = require('../Title-d0f735cd.js');
var Body = require('../Body-a8259c1c.js');
var Footer = require('../Footer-269a1383.js');
var PopUp = require('../PopUp-f3cfadbf.js');

var DEFAULT_LANGUAGE = {
    close: "Close"
};

const Alert = ({ modalElementProps, overlayProps, type = "primary", title, message, callback, lang = DEFAULT_LANGUAGE, status, setStatus, transitionClassName, transitionDuration, transitionType, showAnimation, hideAnimation, beforeOpen, beforeClose, afterOpen, afterClose }) => {
    React__default.useEffect(() => {
        if (status) {
            DOMHelper.DOMHelper.addEventListener(document.body, ["keydown"], keydown);
            return () => {
                DOMHelper.DOMHelper.removeEventListener(document.body, ["keydown"], keydown);
            };
        }
    }, [status]);
    const close = () => {
        if (callback)
            callback();
        if (setStatus)
            setStatus(false);
    };
    const keydown = (e) => {
        switch (e.keyCode) {
            case 13:
            case 27:
                close();
        }
    };
    return (React__default.createElement(PopUp.PopUp, { modalElementProps: modalElementProps, overlayProps: overlayProps, status: status, transitionClassName: transitionClassName, transitionDuration: transitionDuration, transitionType: transitionType, showAnimation: showAnimation, hideAnimation: hideAnimation, beforeOpen: beforeOpen, beforeClose: beforeClose, afterOpen: afterOpen, afterClose: afterClose },
        title && React__default.createElement(Header.ModalHeader, null,
            React__default.createElement(Title.ModalTitle, null, title)),
        React__default.createElement(Body.ModalBody, null, message),
        React__default.createElement(Footer.ModalFooter, { pt: [0, true] },
            React__default.createElement(Button.Button, { type: type, link: DOMHelper.DOMHelper.isMobile, waveEffect: DOMHelper.DOMHelper.isMobile ? "dark" : "light", elementProps: { onClick: close } }, lang.close))));
};

module.exports = Alert;
