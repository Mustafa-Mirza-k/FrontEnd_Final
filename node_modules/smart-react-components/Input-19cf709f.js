'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var index = require('./index-6d498b59.js');
var React = require('react');
var React__default = _interopDefault(React);
var UseInputMethod = require('./UseInputMethod-e6937228.js');
var UseInputOutput = require('./UseInputOutput-f9f1a610.js');
var InputElement = require('./InputElement-e372853d.js');

const Input = ({ size, sizeSm, sizeMd, sizeLg, sizeXl, containerProps = index.DV.JSX_ELEMENT_PROPS, inputProps = index.DV.JSX_ELEMENT_PROPS, labelProps = index.DV.JSX_ELEMENT_PROPS, label, value, setValue, type, fill, border, shape = "default", hint, error, leftAddon, leftAddonProps = index.DV.JSX_ELEMENT_PROPS, leftAddonAbsolute, rightAddon, rightAddonProps = index.DV.JSX_ELEMENT_PROPS, rightAddonAbsolute }) => {
    const { props, isFocused } = UseInputMethod.useInputMethods({ disabled: inputProps.disabled, value, setValue, onChange: inputProps.onChange, onFocus: inputProps.onFocus, onBlur: inputProps.onBlur });
    return UseInputOutput.useInputOutput({
        element: React__default.createElement(InputElement.Input, Object.assign({}, inputProps, { "size$": size, "size$Sm": sizeSm, "size$Md": sizeMd, "size$Lg": sizeLg, "size$Xl": sizeXl, "type$": type, "fill$": fill, "border$": border, shape: shape, leftAddon: leftAddon ? true : false, leftAddonAbsolute: leftAddonAbsolute, rightAddon: rightAddon ? true : false, rightAddonAbsolute: rightAddonAbsolute }, props)),
        containerProps, inputProps, labelProps, label, shape, leftAddon, leftAddonProps, leftAddonAbsolute, rightAddon, rightAddonProps, rightAddonAbsolute, hint, error, isFocused
    });
};

exports.Input = Input;
