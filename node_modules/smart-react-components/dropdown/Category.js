'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var index = require('../index-6d498b59.js');
var React = require('react');
var React__default = _interopDefault(React);
var styled = require('styled-components');
var styled__default = _interopDefault(styled);
require('../index-1781dba3.js');
var Div = require('../Div-d2bf7bfb.js');

const customKeys = {
    size$: (v, t) => `
        padding: ${t.dropdown.padding[v]} ${t.dropdown.padding[v]};
        margin: ${t.dropdown.margin[v].y} ${t.dropdown.margin[v].x};
        font-size: ${t.dropdown.fontSize[v]};
    `
};
const ItemElement = styled__default(Div.Div).attrs({ customKeys })(({ theme, type$, shape }) => `
    border-radius: ${theme.src.dropdown.radius[shape]};
    background: ${theme.src.type[type$].dropdown.background};
    color: ${theme.src.type[type$].dropdown.font};
    cursor: initial;
    word-wrap: break-word;
    word-break: break-word;
    font-family: ${theme.src.fontFamily.dropdown};
    font-weight: ${theme.src.fontWeight.bold};
`);
const Category = ({ size, sizeSm, sizeMd, sizeLg, sizeXl, elementProps = index.DV.JSX_ELEMENT_PROPS, children, type = "primary", shape = "default" }) => {
    return React__default.createElement(ItemElement, Object.assign({}, elementProps, { "size$": size, "size$Sm": sizeSm, "size$Md": sizeMd, "size$Lg": sizeLg, "size$Xl": sizeXl, "type$": type, shape: shape }), children);
};

module.exports = Category;
