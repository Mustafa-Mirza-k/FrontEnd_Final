import { EPV, Value } from "./";
export interface GridProps {
    grid?: EPV<string>;
    gridSm?: EPV<string>;
    gridMd?: EPV<string>;
    gridLg?: EPV<string>;
    gridXl?: EPV<string>;
    gridArea?: EPV<Value>;
    gridAreaSm?: EPV<Value>;
    gridAreaMd?: EPV<Value>;
    gridAreaLg?: EPV<Value>;
    gridAreaXl?: EPV<Value>;
    gridAutoColumns?: EPV<Value>;
    gridAutoColumnsSm?: EPV<Value>;
    gridAutoColumnsMd?: EPV<Value>;
    gridAutoColumnsLg?: EPV<Value>;
    gridAutoColumnsXl?: EPV<Value>;
    gridAutoFlow?: EPV<string>;
    gridAutoFlowSm?: EPV<string>;
    gridAutoFlowMd?: EPV<string>;
    gridAutoFlowLg?: EPV<string>;
    gridAutoFlowXl?: EPV<string>;
    gridAutoRows?: EPV<Value>;
    gridAutoRowsSm?: EPV<Value>;
    gridAutoRowsMd?: EPV<Value>;
    gridAutoRowsLg?: EPV<Value>;
    gridAutoRowsXl?: EPV<Value>;
    gridColumn?: EPV<Value>;
    gridColumnSm?: EPV<Value>;
    gridColumnMd?: EPV<Value>;
    gridColumnLg?: EPV<Value>;
    gridColumnXl?: EPV<Value>;
    gridColumnEnd?: EPV<Value>;
    gridColumnEndSm?: EPV<Value>;
    gridColumnEndMd?: EPV<Value>;
    gridColumnEndLg?: EPV<Value>;
    gridColumnEndXl?: EPV<Value>;
    gridColumnGap?: EPV<Value>;
    gridColumnGapSm?: EPV<Value>;
    gridColumnGapMd?: EPV<Value>;
    gridColumnGapLg?: EPV<Value>;
    gridColumnGapXl?: EPV<Value>;
    gridColumnStart?: EPV<Value>;
    gridColumnStartSm?: EPV<Value>;
    gridColumnStartMd?: EPV<Value>;
    gridColumnStartLg?: EPV<Value>;
    gridColumnStartXl?: EPV<Value>;
    gridGap?: EPV<Value>;
    gridGapSm?: EPV<Value>;
    gridGapMd?: EPV<Value>;
    gridGapLg?: EPV<Value>;
    gridGapXl?: EPV<Value>;
    gridRow?: EPV<Value>;
    gridRowSm?: EPV<Value>;
    gridRowMd?: EPV<Value>;
    gridRowLg?: EPV<Value>;
    gridRowXl?: EPV<Value>;
    gridRowEnd?: EPV<Value>;
    gridRowEndSm?: EPV<Value>;
    gridRowEndMd?: EPV<Value>;
    gridRowEndLg?: EPV<Value>;
    gridRowEndXl?: EPV<Value>;
    gridRowGap?: EPV<Value>;
    gridRowGapSm?: EPV<Value>;
    gridRowGapMd?: EPV<Value>;
    gridRowGapLg?: EPV<Value>;
    gridRowGapXl?: EPV<Value>;
    gridRowStart?: EPV<Value>;
    gridRowStartSm?: EPV<Value>;
    gridRowStartMd?: EPV<Value>;
    gridRowStartLg?: EPV<Value>;
    gridRowStartXl?: EPV<Value>;
    gridTemplate?: EPV<string>;
    gridTemplateSm?: EPV<string>;
    gridTemplateMd?: EPV<string>;
    gridTemplateLg?: EPV<string>;
    gridTemplateXl?: EPV<string>;
    gridTemplateAreas?: EPV<string>;
    gridTemplateAreasSm?: EPV<string>;
    gridTemplateAreasMd?: EPV<string>;
    gridTemplateAreasLg?: EPV<string>;
    gridTemplateAreasXl?: EPV<string>;
    gridTemplateColumns?: EPV<Value>;
    gridTemplateColumnsSm?: EPV<Value>;
    gridTemplateColumnsMd?: EPV<Value>;
    gridTemplateColumnsLg?: EPV<Value>;
    gridTemplateColumnsXl?: EPV<Value>;
    gridTemplateRows?: EPV<Value>;
    gridTemplateRowsSm?: EPV<Value>;
    gridTemplateRowsMd?: EPV<Value>;
    gridTemplateRowsLg?: EPV<Value>;
    gridTemplateRowsXl?: EPV<Value>;
}
declare const _default: {
    grid: string;
    gridArea: string;
    gridAutoColumns: (v: any) => string;
    gridAutoFlow: string;
    gridAutoRows: string;
    gridColumn: string;
    gridColumnEnd: string;
    gridColumnGap: (v: any) => string;
    gridColumnStart: string;
    gridGap: (v: any) => string;
    gridRow: string;
    gridRowEnd: string;
    gridRowGap: (v: any) => string;
    gridRowStart: string;
    gridTemplate: string;
    gridTemplateAreas: string;
    gridTemplateColumns: (v: any) => string;
    gridTemplateRows: (v: any) => string;
};
export default _default;
