'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var index = require('../index-6d498b59.js');
var React = require('react');
var React__default = _interopDefault(React);
var styled = require('styled-components');
var styled__default = _interopDefault(styled);
require('../index-1781dba3.js');
var Div = require('../Div-d2bf7bfb.js');

var IconElement = styled__default.div `
    flex: 0 0 auto;
    align-self: stretch;
    display: flex;
    justify-content: center;
    align-items: center;
`;

const getCustomKeys = fill => ({
    size: (v, t) => `
        padding: ${t.alert.padding[v].y} ${t.alert.padding[v].x};
        font-size: ${t.alert.fontSize[v]};

        > ${IconElement} {
            ${fill
        ? `
                padding: 0 ${t.alert.padding[v].xHalf};
                margin-top: -${t.alert.padding[v].y};
                margin-bottom: -${t.alert.padding[v].y};

                &[data-src-icon-position="left"] {
                    margin-right: ${t.alert.padding[v].xHalf};
                    margin-left: -${t.alert.padding[v].x};
                }
    
                &[data-src-icon-position="right"] {
                    margin-right: -${t.alert.padding[v].x};
                    margin-left: ${t.alert.padding[v].xHalf};
                }
            `
        : `
                &[data-src-icon-position="left"] {
                    margin-right: ${t.alert.padding[v].xHalf};
                    margin-left: -${t.alert.padding[v].xHalf};
                }

                &[data-src-icon-position="right"] {
                    margin-right: -${t.alert.padding[v].xHalf};
                    margin-left: ${t.alert.padding[v].xHalf};
                }
            `}
        }
    `
});
const AlertElement = styled__default(Div.Div).attrs(({ size = "default", type = "primary", fill$, iconType, mb = "3" }) => ({
    customKeys: getCustomKeys(fill$),
    size,
    type,
    iconType: iconType || type,
    mb
}))(({ theme, type, fill$, icon, iconType }) => `
    box-sizing: border-box;
    border: solid 1px;
    border-radius: ${theme.src.alert.radius};
    word-wrap: break-word;
    word-break: break-word;
    font-family: ${theme.src.fontFamily.alert};

    ${fill$
    ? `
        border-color: ${theme.src.type[type].main};
        background: ${theme.src.type[type].main};
        color: ${theme.src.type[type].alert.fontFill};    
        fill: ${theme.src.type[type].alert.fontFill};

        a {
            color: ${theme.src.type[type].alert.fontFill};    
        }

        hr {
            background: ${theme.src.type[type].darkest};
        }
    `
    : `
        border-left-width: 10px;
        border-color: ${theme.src.type[type].alert.border};
        background: ${theme.src.type[type].alert.background};
        color: ${theme.src.type[type].alert.font};   
        fill: ${theme.src.type[type].alert.font}; 

        a {
            color: ${theme.src.type[type].alert.linkFont};
        }

        hr {
            background: ${theme.src.type[type].alert.hr};
        }
    `}
    
    ${icon ? `
        display: flex;

        > ${IconElement} {
            ${fill$ ? `
                background: ${iconType == type ? theme.src.type[iconType].darker : theme.src.type[iconType].main};
                fill: ${theme.src.type[iconType].alert.fontFill};
            ` : `
                fill: ${iconType == type ? theme.src.type[iconType].alert.font : theme.src.type[iconType].main};
            `}
        }

        .src-alert-content {
            flex: 1 1 auto;
        }
    ` : ""}

    > {
        header, h1, h2, h3, h4, h5, h6, p, hr {
            margin-top: 0;
            margin-bottom: ${theme.src.length["3"]};

            &:last-child {
                margin-bottom: 0;
            }
        }
    }

    a {
        font-weight: ${theme.src.alert.linkFontWeight};

        &:hover {
            text-decoration: underline;
        }
    }
    
    hr {
        width: 100%;
        height: 1px;
        border: 0;
    }
`);
const Alert = ({ size = "default", sizeSm, sizeMd, sizeLg, sizeXl, elementProps = index.DV.JSX_ELEMENT_PROPS, children, type, fill, icon, iconType, iconPosition = "left" }) => {
    const IconEl = icon ? React__default.createElement(IconElement, { "data-src-icon-position": iconPosition }, icon) : null;
    return (React__default.createElement(AlertElement, Object.assign({}, elementProps, { size: size, sizeSm: sizeSm, sizeMd: sizeMd, sizeLg: sizeLg, sizeXl: sizeXl, type: type, "fill$": fill, icon: icon ? true : false, iconType: iconType, iconPosition: iconPosition }),
        iconPosition == "left" && IconEl,
        icon ? React__default.createElement("div", { className: "src-alert-content" }, children) : children,
        iconPosition == "right" && IconEl));
};

module.exports = Alert;
